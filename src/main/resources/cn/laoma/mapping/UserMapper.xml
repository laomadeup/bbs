<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.laoma.dao.IUserDao">

  <resultMap id="BaseResultMap" type="cn.laoma.domain.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="sex" jdbcType="SMALLINT" property="sex" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="birthday" jdbcType="BIGINT" property="birthday" />
    <result column="createTimestamp" jdbcType="BIGINT" property="createTimestamp" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id, username, password, age
  </sql>
  
  <!-- 根据id查询用户信息 -->
 <select id="getUserById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select  
  		id, username, password, age,email,mobile,sex,status,birthday,createTimestamp
  	from user
  	<where>
	  	<if test="_parameter != 0">
	       id = #{id}
	    </if>
    </where>
  </select>
  
  <select id="getUserByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select  
  		id, username, password, age,email,mobile,sex,status,birthday,createTimestamp
  	from user
  	<where>
	  	<if test="_parameter != null">
	       email = #{email}
	    </if>
    </where>
  </select>
  
   <select id="getUserByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select  
  		id, username, password, age,email,mobile,sex,status,birthday,createTimestamp
  	from user
  	<where>
	  	<if test="_parameter != null">
	       mobile = #{mobile}
	    </if>
    </where>
  </select>
  
  <select id="getUserByMobileAndPassword" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
  		id, username, password, age,email,mobile,sex,status,birthday,createTimestamp
  	from user
  	<where>
  		<if test="mobile != null">
  			mobile = #{mobile}
  		</if>
  		<if test="password != null">
  		  and password = #{password}
  		</if>
  	</where>
  </select>
  
  
 <!--  <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	  select 
	  <include refid="Base_Column_List" />
	  from user
	  <if test="_parameter != 0">
	  where id = #{id,jdbcType=INTEGER}
	  </if>
 </select>
   -->
  
  <!--根据条件查询用户数据  -->
  <select id="selectByExample" parameterType="cn.laoma.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <!-- 根据条件删除用户信息 -->
  <delete id="deleteByExample" parameterType="cn.laoma.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!-- 插入用户数据 -->
  <!-- 如果数据库支持自增长主键字段（比如mysql、sql server）设置useGeneratedKeys=”true”和keyProperty，这样就可以插入主键id值
	oracle则不支持自增长id，设置useGeneratedKey=”false”，如果设置true则会有报错信息。通过nextval函数，如SEQ_table.Nextval生成id -->
  <insert id="insert" parameterType="cn.laoma.domain.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (username, password, age,email,mobile,sex,status,birthday,createTimestamp)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER},#{email,jdbcType=VARCHAR},#{mobile,jdbcType=VARCHAR},#{sex,jdbcType=SMALLINT},
      #{status,jdbcType=SMALLINT},#{birthday,jdbcType=BIGINT},#{createTimestamp,jdbcType=BIGINT})
  </insert>
  
  <!-- 根据条件插入用户数据 -->
  <insert id="insertSelective" parameterType="cn.laoma.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
       <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
       <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <!-- 统计用户数量 -->
  <select id="countByExample" parameterType="cn.laoma.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <!-- 更新用户数据 -->
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
       <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
       <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
   <!-- 根据条件更新用户数据 -->
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER}
      email = #{record.email,jdbcType=VARCHAR}
      mobile = #{record.mobile,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
</mapper>